{"version":3,"sources":["components/containers/todo-list-item.js","components/presentationals/todo-list.js","components/containers/todo-search.js","components/presentationals/todo-header.js","components/containers/todo-status-filter.js","components/containers/todo-add-item.js","App.js","serviceWorker.js","index.js"],"names":["TodoListItem","_this$props","this","props","text","onDeleted","onToggleImportant","onToggleDone","important","classNames","done","react_default","a","createElement","className","onClick","type","Component","TodoList","_ref","todos","map","item","todo_list_item_TodoListItem","Object","assign","e","stopPropagation","key","TodoSearch","state","term","onSearchChange","target","value","_this","setState","trim","toLowerCase","onChange","placeholder","TodoHeader","todo","TodoStatusFilter","filter","onStatusChange","textContent","_this2","button","name","label","classButton","TodoAddItem","handleInputChange","onSubmit","preventDefault","todoInput","document","getElementById","addItem","classList","remove","add","id","App","counter","todoData","createTodoItem","deleteItem","indexOfDeleted","findIndex","arrayBeforeItem","slice","arrayAfterItem","concat","toConsumableArray","newItem","_ref2","_ref3","toggleProperty","_ref4","arr","propName","oldItem","objectSpread","defineProperty","items","length","indexOf","numberOfDone","numberOfTodo","visibleItems","search","todo_header","todo_search_TodoSearch","todo_status_filter_TodoStatusFilter","todo_list","todo_add_item_TodoAddItem","Boolean","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c8bc597f.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\n\nexport default class TodoListItem extends Component{\n\n\n\n\n\n\n    render(){\n        const { text, onDeleted, onToggleImportant, onToggleDone, important, done } = this.props;\n\n        let classNames = 'todo__item';\n        if(done){\n            classNames += ' todo__item--done';\n        } \n        if(important){\n            classNames += ' todo__item--important';\n        }\n\n        return(\n            <li \n            className={classNames} \n            onClick={onToggleDone}>\n                <span className=\"todo__text\">{text}</span>\n                <div className=\"todo__item-btn\">\n                    <button\n                    type=\"button\"\n                    className=\"btn btn-outline-success btn-sm\"\n                    onClick={onToggleImportant}>\n                        <i className=\"fa fa-exclamation\"></i>\n                    </button>\n                    <button\n                    type=\"button\"\n                    className=\"btn btn-outline-danger btn-sm\"\n                    onClick={onDeleted}>\n                        <i className=\"fa fa-trash-o\"></i>\n                    </button>\n                </div>\n            </li>\n        )\n    }\n}","import React from 'react';\nimport TodoListItem from '../containers/todo-list-item';\n\n\nconst TodoList = ({todos, onDeleted, onToggleImportant, onToggleDone}) => {\n    return(\n            <ul className='todo__list'>\n                {todos.map((item) =>{\n                    return (\n                    <TodoListItem \n                    onDeleted={(e) => {\n                        e.stopPropagation();\n                        onDeleted(item.key)}}\n                    onToggleDone={() => {onToggleDone(item.key)}}\n                    onToggleImportant={(e) => {\n                        e.stopPropagation();\n                        onToggleImportant(item.key)}}\n                    {...item}/>\n                    );\n                })}\n            </ul>\n    );\n}\n\n\nexport default TodoList;","import React, { Component } from 'react';\n\nexport default class TodoSearch extends Component{\n\n    state = {\n        term: ''\n    }\n\n    onSearchChange = (e) => {\n        let term = e.target.value;\n        this.setState({ term });\n        this.props.onSearchChange(term.trim().toLowerCase());\n    };\n\n    render(){\n        return(\n            <input \n            onChange={this.onSearchChange}\n            placeholder='search' \n            className=\"todo__search\"\n            value={this.state.term}/>\n      );\n    }\n}\n","import React from 'react';\n\nconst TodoHeader = ({todo, done}) => {\n    return(\n        <div className=\"todo__title\">\n            <h1>Todo List</h1>\n            <span>\n                 <span className=\"todo__title--more\">{todo} more to do</span>, \n                 <span className=\"todo__title--done\"> {done} done</span> </span>\n        </div>\n    );\n}   \n\nexport default TodoHeader;","import React, { Component } from 'react';\n\nexport default class TodoStatusFilter extends Component{\n    state = {\n        filter : ''\n    }\n\n    onStatusChange = (e) => {\n        let filter = e.target.textContent.toLowerCase();\n        this.setState({ filter});\n        this.props.onStatusChange(filter);\n    }\n\n    render(){\n        \n       \n        const buttons = [\n            {name: 'all', label: 'All'},\n            {name: 'active', label: 'Active'},\n            {name: 'done', label: 'Done'}\n        ];\n        const button = buttons.map(({name, label}) => {\n            const isActive = this.props.filter === name;\n            const classButton = isActive ? 'btn btn-info' : 'btn btn-outline-secondary';\n            return(\n                <button \n                key={name}\n                type=\"button\"\n                className={classButton}\n                onClick={this.onStatusChange}>\n                    {label}\n                </button>\n            )\n        });\n\n        return(\n            <div className=\"btn-group\">\n                {button}\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\n\n\n\nexport default class TodoAddItem extends Component{\n\n    state = {\n        text: ''\n    };\n\n    handleInputChange = (e) => {\n        this.setState({\n            text: e.target.value\n        });\n        \n    };\n    onSubmit = (e) => {\n        e.preventDefault();\n        let todoInput = document.getElementById('todoInput');\n        if(this.state.text){\n            this.props.addItem(this.state.text);\n            todoInput.classList.remove('todo__form--error');\n            this.setState({\n                text: ''\n            });\n        } else {\n            todoInput.classList.add('todo__form--error');\n        }\n    };\n\n    render(){\n        return(\n            <form \n            onSubmit={this.onSubmit}\n            className=\"todo__form d-flex\">\n                <input\n                    id=\"todoInput\"\n                    type=\"text\"\n                    value={this.state.text}\n                    onChange={this.handleInputChange}\n                    className=\"form-control\"\n                    placeholder=\"What needs to be done?\" />\n                <button \n                type='submit'\n                className=\"btn btn-outline-secondary\">\n                    Add Task\n                </button>\n            </form>\n        );\n    }\n}","import React, { Component } from 'react';\nimport TodoList from './components/presentationals/todo-list';\nimport TodoSearch from './components/containers/todo-search';\nimport TodoHeader from './components/presentationals/todo-header';\nimport TodoStatusFilter from './components/containers/todo-status-filter';\nimport TodoAddItem from './components/containers/todo-add-item';\nimport './scss/todo-list.scss';\n\n\n\nclass App extends Component {\n\n\n  counter = 1;\n\n\n  state = {\n    todoData : [\n      this.createTodoItem('first item'),\n      this.createTodoItem('second item'),\n      this.createTodoItem('third item')\n    ],\n    term: '',\n    filter: 'all' // active, all, done\n  };\n\n\n\n\n  toggleProperty(arr, key, propName){\n    let indexOfDeleted = arr.findIndex((item) => item.key === key),\n    oldItem = arr[indexOfDeleted],\n    newItem = {...oldItem, [propName]: !oldItem[propName]};\n    \n    return [...arr.slice(0, indexOfDeleted),\n                newItem,\n                ...arr.slice(indexOfDeleted + 1)\n              ];\n  }\n\n  createTodoItem(text){\n    return {\n      text: text,\n      key: text + this.counter,\n      important: false,\n      done: false\n    }\n  }\n\n  \n  deleteItem = (key) =>{\n    this.setState(({ todoData }) => {\n      let indexOfDeleted = todoData.findIndex((item) => item.key === key),\n          arrayBeforeItem = todoData.slice(0, indexOfDeleted),\n          arrayAfterItem = todoData.slice(indexOfDeleted + 1),\n          finalArray = [...arrayBeforeItem, ...arrayAfterItem];\n\n      return {\n        todoData: finalArray\n      };\n\n    });\n  };\n\n  addItem = (text) => {\n    this.counter++;\n    const newItem = this.createTodoItem(text);\n\n    this.setState(({todoData}) => {\n        let finalArray = [\n          newItem, \n          ...todoData\n        ];\n        return {\n          todoData: finalArray\n        };\n    }); \n  };\n\n  onToggleImportant = (key) => {\n    this.setState(({todoData}) =>{\n      return{\n          todoData: this.toggleProperty(todoData, key, 'important')\n      }\n    });\n  };\n\n  onToggleDone = (key) => {\n    this.setState(({todoData}) =>{\n            return{\n              todoData: this.toggleProperty(todoData, key, 'done')\n            };\n    });\n  };\n\n  onSearchChange = (term) => {\n      this.setState({ term });\n  };\n  onStatusChange = (filter) => {\n    this.setState({ filter });\n  }\n\n  search(items, term){\n    if(term.length === 0){    \n      return items;\n    }\n    return items.filter((item) => {\n      return item.text.indexOf(term) > -1;\n\n    });\n  };\n\n  filter(items, filter){\n    switch(filter){\n      case 'all':\n        return items;\n      case 'active':\n        return items.filter((item) => !item.done);\n      case 'done':\n        return items.filter((item) => item.done);\n      default:\n        return items;\n    };\n  }\n  \n  render() {\n    const numberOfDone = this.state.todoData.filter(item => item.done).length,\n          numberOfTodo = this.state.todoData.length - numberOfDone,\n          visibleItems = this.filter(this.search(this.state.todoData, this.state.term), this.state.filter);\n    \n    return (\n      <div className=\"App\">\n          <div className=\"todo__wrapper\">\n            <div className=\"todo__header\">\n              <TodoHeader todo={numberOfTodo} done={numberOfDone}/>\n            </div>\n            <div className=\"todo__buttons\">\n              <TodoSearch todo={this.state.todoData} onSearchChange={this.onSearchChange}/>\n              <TodoStatusFilter onStatusChange={this.onStatusChange} filter={this.state.filter}/>\n            </div>\n            <TodoList \n            todos={visibleItems}\n            onDeleted={this.deleteItem}\n            onToggleImportant={this.onToggleImportant}\n            onToggleDone={this.onToggleDone}/>\n            <TodoAddItem addItem={this.addItem}/>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}